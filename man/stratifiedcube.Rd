% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/stratifiedcube.R
\name{stratifiedcube}
\alias{stratifiedcube}
\title{Stratified Sampling}
\usage{
stratifiedcube(X, strata, pik)
}
\arguments{
\item{X}{matrix of auxiliary variables.}

\item{strata}{matrix of categorical variables.}

\item{pik}{vector of inclusion probabilities.}
}
\value{
A vector with elements equal to 0 or 1. The value 1 indicates that the unit is selected while the value 0 is for rejected units.
}
\description{
sndgj
}
\examples{

##----------------------------------------------------------------
##                              Data                             -
##----------------------------------------------------------------

rm(list = ls())
N <- 1000
n <- 100
x1 <- rgamma(N,4,25)
x2 <- rgamma(N,4,25)
strata <- as.matrix(rep(1:n,each = N/n))
Xcat <- disjMatrix(strata)



##---------------------------------------------------------------
##                        different cases                       -
##---------------------------------------------------------------
  

#-------- CASE 1 pik equal and integer in each strata 

 pik <- sampling::inclusionprobastrata(strata,rep(1,n))
 X <- as.matrix(cbind(pik,matrix(c(x1,x2),ncol = 2)))
 system.time(s <- stratifiedcube(X,strata,pik))
 sum(s)
 t(X/pik)\%*\%s
 t(X/pik)\%*\%pik
 
 t(Xcat)\%*\%s
 t(Xcat)\%*\%pik
 

#-------- CASE 2 pik unequal and integer in each strata  

 pik <- rep(sampling::inclusionprobabilities(runif(N/n),1),n)
 X <- as.matrix(cbind(pik,matrix(c(x1,x2),ncol = 2)))
 system.time(s <- stratifiedcube(X,strata,pik))
 sum(s)
 t(X/pik)\%*\%s
 t(X/pik)\%*\%pik
 
 t(Xcat)\%*\%s
 t(Xcat)\%*\%pik  

#-------- CASE 3 pik equal and NOT integer in each strata 
 
 pik <- rep(0.25,N)
 X <- as.matrix(cbind(pik,matrix(c(x1,x2),ncol = 2)))
 system.time(s <- stratifiedcube(X,strata,pik))
 sum(s)
 t(X/pik)\%*\%s
 t(X/pik)\%*\%pik
 
 t(Xcat)\%*\%s
 t(Xcat)\%*\%pik
 
#-------- CASE 4 pik unequal and NOT integer in each strata 
 
pik <- rep(sampling::inclusionprobabilities(runif(N/n),2.5),n)
X <- as.matrix(cbind(pik,matrix(c(x1,x2),ncol = 2)))
system.time(s <- stratifiedcube(X,strata,pik))
sum(s)
t(X/pik)\%*\%s
t(X/pik)\%*\%pik

t(Xcat)\%*\%s
t(Xcat)\%*\%pik
}
